substitutions:
  name: "auto-space-entrance-331a70"
  friendly_name: Auto Space Entrance 331a70
  upper_devicename: "ESP32-S3 LD2410C 1WAY RELAY"
  project_name: "Taiwan Smart Home Technology.Auto Space Lite"
  project_version: "1.0"  
  temperature_offset: "0"
  humidity_offset: "0"  
  hidden_ssid: "false"    
  illuminance_update_interval: "60s"
  temperature_update_interval: "60s"
  wifi_signal_update_interval: "600s"    

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  # name_add_mac_suffix: True
  platformio_options:
    board_build.flash_mode: dio
  project:
    name: "${project_name}"
    version: "${project_version}"
  comment: ${upper_devicename}   

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: esp-idf

# Enable logging
logger:
  logs:
    ld2410: WARN
    sensor: WARN
    component: ERROR

# Enable Home Assistant API
api:

# Allow Over-The-Air updates
ota:
  - platform: esphome

# Allow provisioning Wi-Fi via serial
improv_serial:

wifi:
  fast_connect: ${hidden_ssid}
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${name}
    password: ""

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device via WiFi AP.
captive_portal:

dashboard_import:
  package_import_url: github://esphome/firmware/esphome-web/esp32s3.yaml@v2
  import_full_config: true

# Sets up Bluetooth LE (Only on ESP32) to allow the user
# to provision wifi credentials to the device.
esp32_improv:
  authorizer: none

# To have a "next url" for improv serial
web_server:
  port: 80
  # version: 3

globals:
  - id: countNo
    type: int
    initial_value: '0'
  - id: Tuning
    type: int
    initial_value: '0'
  - id: MaxMoveEN0                                                          # to keep maximum moving energy of gate 0 for tuning
    type: int
    initial_value: '0'
    restore_value: true
  - id: MaxMoveEN1                                                          # to keep maximum moving energy of gate 1 for tuning
    type: int
    restore_value: true
    initial_value: '35'
  - id: MaxMoveEN2                                                          # to keep maximum moving energy of gate 2 for tuning
    type: int
    restore_value: true
    initial_value: '35'
  - id: MaxMoveEN3                                                          # to keep maximum moving energy of gate 3 for tuning
    type: int
    initial_value: '35'
    restore_value: true
  - id: MaxMoveEN4                                                          # to keep maximum moving energy of gate 4 for tuning
    type: int
    initial_value: '25'
    restore_value: true
  - id: MaxMoveEN5                                                          # to keep maximum moving energy of gate 5 for tuning
    type: int
    initial_value: '25'
    restore_value: true
  - id: MaxMoveEN6                                                          # to keep maximum moving energy of gate 6 for tuning
    type: int
    initial_value: '25'
    restore_value: true
  - id: MaxMoveEN7                                                          # to keep maximum moving energy of gate 7 for tuning
    type: int
    initial_value: '25'
    restore_value: true
  - id: MaxMoveEN8                                                          # to keep maximum moving energy of gate 8 for tuning
    type: int
    initial_value: '25'
    restore_value: true
  - id: MaxOCCEN0                                                           # to keep maximum still energy of gate 0 for tuning
    type: int
    initial_value: '0'
    restore_value: true
  - id: MaxOCCEN1                                                           # to keep maximum still energy of gate 1 for tuning
    type: int
    initial_value: '100'
    restore_value: true
  - id: MaxOCCEN2                                                           # to keep maximum still energy of gate 2 for tuning
    type: int
    initial_value: '15'
    restore_value: true
  - id: MaxOCCEN3                                                           # to keep maximum still energy of gate 3 for tuning
    type: int
    initial_value: '15'
    restore_value: true
  - id: MaxOCCEN4                                                           # to keep maximum still energy of gate 4 for tuning
    type: int
    initial_value: '15'
    restore_value: true
  - id: MaxOCCEN5                                                           # to keep maximum still energy of gate 5 for tuning
    type: int
    initial_value: '15'
    restore_value: true
  - id: MaxOCCEN6                                                           # to keep maximum still energy of gate 6 for tuning
    type: int
    initial_value: '15'
    restore_value: true
  - id: MaxOCCEN7                                                           # to keep maximum still energy of gate 7 for tuning
    type: int
    initial_value: '15'
    restore_value: true
  - id: MaxOCCEN8                                                           # to keep maximum still energy of gate 8 for tuning
    type: int
    initial_value: '15'
    restore_value: true     

uart:
  id: uart_mmwave
  tx_pin: 17
  rx_pin: 18
  baud_rate: 256000
  parity: NONE
  stop_bits: 1

ld2410:
  uart_id: uart_mmwave
  throttle: 1500ms
  id: ld2410_comp 

binary_sensor:
  - platform: ld2410
    has_target:
      name: "Occupancy 佔用"
    has_moving_target:
      name: "Moving Target 動態目標"
    has_still_target:
      name: "Still Target 靜態目標"
    out_pin_presence_status:
      name: presence status 光照判斷
      icon: mdi:theme-light-dark

  - platform: gpio
    pin: GPIO16
    icon: mdi:theme-light-dark
    name: "Light Occupancy 光照判斷"
    id: gpio_out_pin_presence
    device_class: presence
    on_state:
      then:
        - if:
            condition:  # 有人，非手動，亮度不夠 開燈
              lambda: 'return id(gpio_out_pin_presence).state && !id(decouple_1).state ;'       
            then:        
              - switch.turn_on: relay_1
        - if:
            condition:  # 有人，非手動，亮度不夠 開燈
              lambda: 'return !id(gpio_out_pin_presence).state && !id(decouple_1).state ;'         
            then:        
              - switch.turn_off: relay_1    

  - platform: gpio
    id: binary_sensor_1
    name: "Binary_sensor_1 開關訊號"
    icon: mdi:toggle-switch-variant-off
    pin:
      number: 9
      inverted: true
      mode: INPUT_PULLUP
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms      
    on_state:
      then:
        - if:
            condition:    
              lambda: 'return !id(decouple_1).state;'
            then:
              - delay: 50ms
              - switch.toggle: relay_1

  - platform: template
    name: "Busy status"
    id: busyStatus

switch:
  - platform: ld2410
    engineering_mode:
      name: "Engineering mode 工程模式"
      id: engineering_mode
    bluetooth:
      name: "Control bluetooth 藍芽控制"
      #internal: true
  - platform: gpio  #light
    id: relay_1
    icon: mdi:electric-switch
    pin: 8
    name: "Relay_1 繼電器" 

  - platform: template
    name: "Decouple_relay_1 解藕"
    id: decouple_1
    icon: mdi:link-variant
    optimistic: true
    entity_category: config
    restore_mode: RESTORE_DEFAULT_OFF
    # on_turn_on:
    #   then:
    #   - switch.turn_on: decouple_1
    # on_turn_off:
    #   then:
    #   - switch.turn_off: decouple_1    
       
sensor:
  - platform: ld2410
    light:
      name: "Light 光照度"
    moving_distance:
      name : "Moving Distance 動態距離"
    still_distance:
      name: "Still Distance 靜態距離"
    moving_energy:
      name: "Move Energy 動態量能"
    still_energy:
      name: "Still Energy 靜態量能"
    detection_distance:
      name: "Detection Distance 檢測距離"

    g0:
      move_energy:
        name: g0 move energy
        id: g0_Move_EN
        on_value: 
          lambda: |-
            if (id(Tuning) == 1) {
              if (id(g0_Move_EN).state > id(MaxMoveEN0)) {                            
                id(MaxMoveEN0) = id(g0_Move_EN).state; 
              }
            }
      still_energy:
        name: g0 still energy
        id: g0_Still_EN
        on_value: 
          lambda: |-
            if (id(Tuning) == 1) {
              if (id(g0_Still_EN).state > id(MaxOCCEN0)) {                            
                id(MaxOCCEN0) = id(g0_Still_EN).state; 
              }
            }
    g1:
      move_energy:
        name: g1 move energy
        id: g1_Move_EN
        on_value: 
          lambda: |-
            if (id(Tuning) == 1) {
              if (id(g1_Move_EN).state > id(MaxMoveEN1)) {                            
                id(MaxMoveEN1) = id(g1_Move_EN).state; 
              }
            }
      still_energy:
        name: g1 still energy
        id: g1_Still_EN
        on_value: 
          lambda: |-
            if (id(Tuning) == 1) {
              if (id(g1_Still_EN).state > id(MaxOCCEN1)) {                            
                id(MaxOCCEN1) = id(g1_Still_EN).state; 
              }
            }
    g2:
      move_energy:
        name: g2 move Energy
        id: g2_Move_EN
        on_value: 
          lambda: |-
            if (id(Tuning) == 1) {
              if (id(g2_Move_EN).state > id(MaxMoveEN2)) {                            
                id(MaxMoveEN2) = id(g2_Move_EN).state; 
              }
            }
      still_energy:
        name: g2 still energy
        id: g2_Still_EN
        on_value: 
          lambda: |-
            if (id(Tuning) == 1) {
              if (id(g2_Still_EN).state > id(MaxOCCEN2)) {                            
                id(MaxOCCEN2) = id(g2_Still_EN).state; 
              }
            }
    g3:
      move_energy:
        name: g3 move energy
        id: g3_Move_EN
        on_value: 
          lambda: |-
            if (id(Tuning) == 1) {
              if (id(g3_Move_EN).state > id(MaxMoveEN3)) {                            
                id(MaxMoveEN3) = id(g3_Move_EN).state; 
              }
            }
      still_energy:
        name: g3 still energy
        id: g3_Still_EN
        on_value: 
          lambda: |-
            if (id(Tuning) == 1) {
              if (id(g3_Still_EN).state > id(MaxOCCEN3)) {                            
                id(MaxOCCEN3) = id(g3_Still_EN).state; 
              }
            }
    g4:
      move_energy:
        name: g4 move energy
        id: g4_Move_EN
        on_value: 
          lambda: |-
            if (id(Tuning) == 1) {
              if (id(g4_Move_EN).state > id(MaxMoveEN4)) {                            
                id(MaxMoveEN4) = id(g4_Move_EN).state; 
              }
            }
      still_energy:
        name: g4 still energy
        id: g4_Still_EN
        on_value: 
          lambda: |-
            if (id(Tuning) == 1) {
              if (id(g4_Still_EN).state > id(MaxOCCEN4)) {                            
                id(MaxOCCEN4) = id(g4_Still_EN).state; 
              }
            }

    g5:
      move_energy:
        name: g5 move energy
        id: g5_Move_EN
        on_value: 
          lambda: |-
            if (id(Tuning) == 1) {
              if (id(g5_Move_EN).state > id(MaxMoveEN5)) {                            
                id(MaxMoveEN5) = id(g5_Move_EN).state; 
              }
            }
      still_energy:
        name: g5 still energy
        id: g5_Still_EN
        on_value: 
          lambda: |-
            if (id(Tuning) == 1) {
              if (id(g5_Still_EN).state > id(MaxOCCEN5)) {                            
                id(MaxOCCEN5) = id(g5_Still_EN).state; 
              }
            }
    g6:
      move_energy:
        name: g6 move energy
        id: g6_Move_EN
        on_value: 
          lambda: |-
            if (id(Tuning) == 1) {
              if (id(g6_Move_EN).state > id(MaxMoveEN6)) {                            
                id(MaxMoveEN6) = id(g6_Move_EN).state; 
              }
            }
      still_energy:
        name: g6 still energy
        id: g6_Still_EN
        on_value: 
          lambda: |-
            if (id(Tuning) == 1) {
              if (id(g6_Still_EN).state > id(MaxOCCEN6)) {                            
                id(MaxOCCEN6) = id(g6_Still_EN).state; 
              }
            }
    g7:
      move_energy:
        name: g7 move energy
        id: g7_Move_EN
        on_value: 
          lambda: |-
            if (id(Tuning) == 1) {
              if (id(g7_Move_EN).state > id(MaxMoveEN7)) {                            
                id(MaxMoveEN7) = id(g7_Move_EN).state; 
              }
            }
      still_energy:
        name: g7 still energy
        id: g7_Still_EN
        on_value: 
          lambda: |-
            if (id(Tuning) == 1) {
              if (id(g7_Still_EN).state > id(MaxOCCEN7)) {                            
                id(MaxOCCEN7) = id(g7_Still_EN).state; 
              }
            }
    g8:
      move_energy:
        name: g8 move energy
        id: g8_Move_EN
        on_value: 
          lambda: |-
            if (id(Tuning) == 1) {
              if (id(g8_Move_EN).state > id(MaxMoveEN8)) {                            
                id(MaxMoveEN8) = id(g8_Move_EN).state; 
              }
            }
      still_energy:
        name: g8 still energy
        id: g8_Still_EN
        on_value: 
          lambda: |-
            if (id(Tuning) == 1) {
              if (id(g8_Still_EN).state > id(MaxOCCEN8)) {                            
                id(MaxOCCEN8) = id(g8_Still_EN).state; 
              }
            }    
   
  - platform: template
    name: countDown
    id: countDown
    update_interval: 0.1s
    accuracy_decimals: 0
    lambda: |-
        return id(countNo);


  - platform: template
    name: g0 move threshold
    id: MaxMoveEN0_sensor  
    update_interval: 0.1s
    lambda: |-
      if (id(Tuning) == 1 || id(Tuning) == 2) {
        return id(MaxMoveEN0) + id(weight).state;
      } else {
        return id(MaxMoveEN0_sensor).state;
      }   
  - platform: template
    name: g1 move threshold
    id: MaxMoveEN1_sensor  
    update_interval: 0.1s
    lambda: |-
      if (id(Tuning) == 1 || id(Tuning) == 2) {
        return id(MaxMoveEN1) + id(weight).state;
      } else {
        return id(MaxMoveEN1_sensor).state;
      }  
  - platform: template
    name: g2 move threshold
    id: MaxMoveEN2_sensor  
    update_interval: 0.1s
    lambda: |-
      if (id(Tuning) == 1 || id(Tuning) == 2) {
        return id(MaxMoveEN2) + id(weight).state;
      } else {
        return id(MaxMoveEN2_sensor).state;
      }   
  - platform: template
    name: g3 move threshold
    id: MaxMoveEN3_sensor  
    update_interval: 0.1s
    lambda: |-
      if (id(Tuning) == 1 || id(Tuning) == 2) {
        return id(MaxMoveEN3) + id(weight).state;
      } else {
        return id(MaxMoveEN3_sensor).state;
      }   
  - platform: template
    name: g4 move threshold
    id: MaxMoveEN4_sensor  
    update_interval: 0.1s
    lambda: |-
      if (id(Tuning) == 1 || id(Tuning) == 2) {
        return id(MaxMoveEN4) + id(weight).state;
      } else {
        return id(MaxMoveEN4_sensor).state;
      }   
  - platform: template
    name: g5 move threshold
    id: MaxMoveEN5_sensor  
    update_interval: 0.1s
    lambda: |-
      if (id(Tuning) == 1 || id(Tuning) == 2) {
        return id(MaxMoveEN5) + id(weight).state;
      } else {
        return id(MaxMoveEN5_sensor).state;
      }    
  - platform: template
    name: g6 move threshold
    id: MaxMoveEN6_sensor  
    update_interval: 0.1s
    lambda: |-
      if (id(Tuning) == 1 || id(Tuning) == 2) {
        return id(MaxMoveEN6) + id(weight).state;
      } else {
        return id(MaxMoveEN6_sensor).state;
      }    
  - platform: template
    name: g7 move threshold
    id: MaxMoveEN7_sensor  
    update_interval: 0.1s
    lambda: |-
      if (id(Tuning) == 1 || id(Tuning) == 2) {
        return id(MaxMoveEN7) + id(weight).state;
      } else {
        return id(MaxMoveEN7_sensor).state;
      }    
  - platform: template
    name: g8 move threshold
    id: MaxMoveEN8_sensor  
    update_interval: 0.1s
    lambda: |-
      if (id(Tuning) == 1 || id(Tuning) == 2) {
        return id(MaxMoveEN8) + id(weight).state;
      } else {
        return id(MaxMoveEN8_sensor).state;
      }    
  - platform: template
    name: g0 still threshold
    id: MaxOCCEN0_sensor  
    update_interval: 0.1s
    lambda: |-
      if (id(Tuning) == 1 || id(Tuning) == 2) {
        return id(MaxOCCEN0) + id(weight).state;
      } else {
        return id(MaxOCCEN0_sensor).state;
      }    
  - platform: template
    name: g1 still threshold
    id: MaxOCCEN1_sensor  
    update_interval: 0.1s
    lambda: |-
      if (id(Tuning) == 1 || id(Tuning) == 2) {
        return id(MaxOCCEN1) + id(weight).state;
      } else {
        return id(MaxOCCEN1_sensor).state;
      }    
  - platform: template
    name: g2 still threshold
    id: MaxOCCEN2_sensor  
    update_interval: 0.1s
    lambda: |-
      if (id(Tuning) == 1 || id(Tuning) == 2) {
        return id(MaxOCCEN2) + id(weight).state;
      } else {
        return id(MaxOCCEN2_sensor).state;
      }    
  - platform: template
    name: g3 still threshold
    id: MaxOCCEN3_sensor  
    update_interval: 0.1s
    lambda: |-
      if (id(Tuning) == 1 || id(Tuning) == 2) {
        return id(MaxOCCEN3) + id(weight).state;
      } else {
        return id(MaxOCCEN3_sensor).state;
      }    
  - platform: template
    name: g4 still threshold
    id: MaxOCCEN4_sensor  
    update_interval: 0.1s
    lambda: |-
      if (id(Tuning) == 1 || id(Tuning) == 2) {
        return id(MaxOCCEN4) + id(weight).state;
      } else {
        return id(MaxOCCEN4_sensor).state;
      }    
  - platform: template
    name: g5 still threshold
    id: MaxOCCEN5_sensor  
    update_interval: 0.1s
    lambda: |-
      if (id(Tuning) == 1 || id(Tuning) == 2) {
        return id(MaxOCCEN5) + id(weight).state;
      } else {
        return id(MaxOCCEN5_sensor).state;
      }    
  - platform: template
    name: g6 still threshold
    id: MaxOCCEN6_sensor  
    update_interval: 0.1s
    lambda: |-
      if (id(Tuning) == 1 || id(Tuning) == 2) {
        return id(MaxOCCEN6) + id(weight).state;
      } else {
        return id(MaxOCCEN6_sensor).state;
      }    
  - platform: template
    name: g7 still threshold
    id: MaxOCCEN7_sensor  
    update_interval: 0.1s
    lambda: |-
      if (id(Tuning) == 1 || id(Tuning) == 2) {
        return id(MaxOCCEN7) + id(weight).state;
      } else {
        return id(MaxOCCEN7_sensor).state;
      }    
  - platform: template
    name: g8 still threshold
    id: MaxOCCEN8_sensor  
    update_interval: 0.1s
    lambda: |-
      if (id(Tuning) == 1 || id(Tuning) == 2) {
        return id(MaxOCCEN8) + id(weight).state;
      } else {
        return id(MaxOCCEN8_sensor).state;
      }               
    # g0:
    #   move_energy:
    #     name: "g0 move energy 動態量能"
    #     #internal: true
    #   still_energy:
    #     name: "g0 still energy 靜態量能"
    #     #internal: true
    # g1:
    #   move_energy:
    #     name: "g1 move energy 動態量能"
    #     #internal: true
    #   still_energy:
    #     name: "g1 still energy 靜態量能"
    #     #internal: true
    # g2:
    #   move_energy:
    #     name: "g2 move energy 動態量能"
    #     #internal: true
    #   still_energy:
    #     name: "g2 still energy 靜態量能"
    #     #internal: true
    # g3:
    #   move_energy:
    #     name: "g3 move energy 動態量能"
    #     #internal: true
    #   still_energy:
    #     name: "g3 still energy 靜態量能"
    #     #internal: true
    # g4:
    #   move_energy:
    #     name: "g4 move energy 動態量能"
    #     #internal: true
    #   still_energy:
    #     name: "g4 still energy 靜態量能"
    #     #internal: true
    # g5:
    #   move_energy:
    #     name: "g5 move energy 動態量能"
    #     #internal: true
    #   still_energy:
    #     name: "g5 still energy 靜態量能"
    #     #internal: true
    # g6:
    #   move_energy:
    #     name: "g6 move energy 動態量能"
    #     #internal: true
    #   still_energy:
    #     name: "g6 still energy 靜態量能"
    #     #internal: true
    # g7:
    #   move_energy:
    #     name: "g7 move energy 動態量能"
    #     #internal: true
    #   still_energy:
    #     name: "g7 still energy 靜態量能"
    #     #internal: true
    # g8:
    #   move_energy:
    #     name: "g8 move energy 動態量能"
    #     #internal: true
    #   still_energy:
    #     name: "g8 still energy 靜態量能"   
    #     #internal: true
 
number:
  - platform: ld2410
    timeout:
      name: "Timeout 延遲時間"
      mode: box
    light_threshold:
      name: "Light threshold 光照度臨界值"
    max_move_distance_gate:
      name: "Max move distance gate 動態檢測倍數"
    max_still_distance_gate:
      name: "Max still distance gate 靜態檢測倍數"

    g0:
      move_threshold:
        name: g0 move threshold
        id: g0_move_threshold
        internal: true
      still_threshold:
        name: g0 still threshold
        id: g0_still_threshold
        internal: true
    g1:
      move_threshold:
        name: g1 move threshold
        id: g1_move_threshold
        internal: true
      still_threshold:
        name: g1 still threshold
        id: g1_still_threshold
        internal: true
    g2:
      move_threshold:
        name: g2 move threshold
        id: g2_move_threshold
        internal: true
      still_threshold:
        name: g2 still threshold
        id: g2_still_threshold
        internal: true
    g3:
      move_threshold:
        name: g3 move threshold
        id: g3_move_threshold
        internal: true
      still_threshold:
        name: g3 still threshold
        id: g3_still_threshold
        internal: true
    g4:
      move_threshold:
        name: g4 move threshold
        id: g4_move_threshold
        internal: true
      still_threshold:
        name: g4 still threshold
        id: g4_still_threshold
        internal: true
    g5:
      move_threshold:
        name: g5 move threshold
        id: g5_move_threshold
        internal: true
      still_threshold:
        name: g5 still threshold
        id: g5_still_threshold
        internal: true
    g6:
      move_threshold:
        name: g6 move threshold
        id: g6_move_threshold
        internal: true
      still_threshold:
        name: g6 still threshold
        id: g6_still_threshold
        internal: true
    g7:
      move_threshold:
        name: g7 move threshold
        id: g7_move_threshold
        internal: true
      still_threshold:
        name: g7 still threshold
        id: g7_still_threshold
        internal: true
    g8:
      move_threshold:
        name: g8 move threshold
        id: g8_move_threshold
        internal: true
      still_threshold:
        name: g8 still threshold
        id: g8_still_threshold
        internal: true

  - platform: template
    name: "level of sensitivity"                                                         # maximum gate count"
    id: weight
    min_value: 3
    max_value: 24
    initial_value: 3
    step: 3
    restore_value: true
    optimistic: true        
    # g0:
    #   move_threshold:
    #     name: "g0 move threshold 動態臨界值"
    #     #internal: true
    #     id: g0_move_threshold
    #   still_threshold:
    #     name: "g0 still threshold 靜態臨界值"
    #     #internal: true
    #     id: g0_still_threshold
    # g1:
    #   move_threshold:
    #     name: "g1 move threshold 動態臨界值"
    #     #internal: true
    #     id: g1_move_threshold
    #   still_threshold:
    #     name: "g1 still threshold 靜態臨界值"
    #     #internal: true
    #     id: g1_still_threshold
    # g2:
    #   move_threshold:
    #     name: "g2 move threshold 動態臨界值"
    #     #internal: true
    #     id: g2_move_threshold
    #   still_threshold:
    #     name: "g2 still threshold 靜態臨界值"
    #     #internal: true
    #     id: g2_still_threshold
    # g3:
    #   move_threshold:
    #     name: "g3 move threshold 動態臨界值"
    #     #internal: true
    #     id: g3_move_threshold
    #   still_threshold:
    #     name: "g3 still threshold 靜態臨界值"
    #     #internal: true
    #     id: g3_still_threshold
    # g4:
    #   move_threshold:
    #     name: "g4 move threshold 動態臨界值"
    #     #internal: true
    #     id: g4_move_threshold
    #   still_threshold:
    #     name: "g4 still threshold 靜態臨界值"
    #     #internal: true
    #     id: g4_still_threshold
    # g5:
    #   move_threshold:
    #     name: "g5 move threshold 動態臨界值"
    #     #internal: true
    #     id: g5_move_threshold
    #   still_threshold:
    #     name: "g5 still threshold 靜態臨界值"
    #     #internal: true
    #     id: g5_still_threshold
    # g6:
    #   move_threshold:
    #     name: "g6 move threshold 動態臨界值"
    #     #internal: true
    #     id: g6_move_threshold
    #   still_threshold:
    #     name: "g6 still threshold 靜態臨界值"
    #     #internal: true
    #     id: g6_still_threshold
    # g7:
    #   move_threshold:
    #     name: "g7 move threshold 動態臨界值"
    #     #internal: true
    #     id: g7_move_threshold
    #   still_threshold:
    #     name: "g7 still threshold 靜態臨界值"
    #     #internal: true
    #     id: g7_still_threshold
    # g8:
    #   move_threshold:
    #     name: "g8 move threshold 動態臨界值"
    #     #internal: true
    #     id: g8_move_threshold
    #   still_threshold:
    #     name: "g8 still threshold 靜態臨界值"
    #     #internal: true
    #     id: g8_still_threshold  

button:
  - platform: ld2410
    factory_reset:
      name: "Factory reset 恢復出廠設定"
      #internal: true
    restart:
      name: "Restart 重開機"
    query_params:
      name: "Query params 查詢參數"   
      #internal: true


  - platform: template
    name: tunigSetting
    id: tuning_setiing
    on_press:
      - switch.turn_on: engineering_mode
      - delay: 3s
      - lambda: id(busyStatus).publish_state(true);
      - lambda: |-
          id(MaxMoveEN0) = 0;
          id(MaxMoveEN1) = 0;
          id(MaxMoveEN2) = 0;
          id(MaxMoveEN3) = 0;
          id(MaxMoveEN4) = 0;
          id(MaxMoveEN5) = 0;
          id(MaxMoveEN6) = 0;
          id(MaxMoveEN7) = 0;
          id(MaxMoveEN8) = 0;
          id(MaxOCCEN0) = 0;
          id(MaxOCCEN1) = 0;
          id(MaxOCCEN2) = 0;
          id(MaxOCCEN3) = 0;
          id(MaxOCCEN4) = 0;
          id(MaxOCCEN5) = 0;
          id(MaxOCCEN6) = 0;
          id(MaxOCCEN7) = 0;
          id(MaxOCCEN8) = 0;
      - lambda: id(Tuning) = 1;
      - lambda: id(countNo) = 120;
      - delay: 30s
      - lambda: id(Tuning) = 0;
      - lambda: id(SetmoveGate).execute();                                          // set moving threshold to LD2410
      - delay: 3s
      - lambda: id(SetstillGate).execute();                                         // set still threshold to LD2410                   
      - delay: 3s
      - lambda: id(busyStatus).publish_state(false);
      - delay: 3s
      - switch.turn_off: engineering_mode

  - platform: template
    name: "Threshold Presets 1 預設"
    id: move_presets_1   
    icon: "mdi:signal-cellular-1"   
    entity_category: config
    internal: true
    on_press:
      then:
        - number.set:
            id: g0_move_threshold
            value: 60 
        - delay: 500ms
        - number.set:
            id: g1_move_threshold
            value: 60 
        - delay: 500ms            
        - number.set:
            id: g2_move_threshold
            value: 48 
        - delay: 500ms            
        - number.set:
            id: g3_move_threshold
            value: 36 
        - delay: 500ms            
        - number.set:
            id: g4_move_threshold
            value: 24 
        - delay: 500ms            
        - number.set:
            id: g5_move_threshold
            value: 18 
        - delay: 500ms            
        - number.set:
            id: g6_move_threshold
            value: 18 
        - delay: 500ms            
        - number.set:
            id: g7_move_threshold
            value: 18 
        - delay: 500ms            
        - number.set:
            id: g8_move_threshold
            value: 18     
        - delay: 500ms                                                                                            
        - number.set:
            id: g0_still_threshold
            value: 0 
        - delay: 500ms            
        - number.set:
            id: g1_still_threshold
            value: 0 
        - delay: 500ms            
        - number.set:
            id: g2_still_threshold
            value: 48 
        - delay: 500ms            
        - number.set:
            id: g3_still_threshold
            value: 48 
        - delay: 500ms            
        - number.set:
            id: g4_still_threshold
            value: 36 
        - delay: 500ms            
        - number.set:
            id: g5_still_threshold
            value: 36 
        - delay: 500ms            
        - number.set:
            id: g6_still_threshold
            value: 24 
        - delay: 500ms            
        - number.set:
            id: g7_still_threshold
            value: 24 
        - delay: 500ms            
        - number.set:
            id: g8_still_threshold
            value: 24 
        - delay: 500ms  

  - platform: template
    name: "Threshold Presets 2 預設"
    id: move_presets_2   
    icon: "mdi:signal-cellular-2"   
    entity_category: config
    internal: true
    on_press:
      then:
        - number.set:
            id: g0_move_threshold
            value: 50 
        - delay: 500ms            
        - number.set:
            id: g1_move_threshold
            value: 50 
        - delay: 500ms            
        - number.set:
            id: g2_move_threshold
            value: 40 
        - delay: 500ms            
        - number.set:
            id: g3_move_threshold
            value: 30 
        - delay: 500ms            
        - number.set:
            id: g4_move_threshold
            value: 20 
        - delay: 500ms            
        - number.set:
            id: g5_move_threshold
            value: 15 
        - delay: 500ms            
        - number.set:
            id: g6_move_threshold
            value: 15 
        - delay: 500ms            
        - number.set:
            id: g7_move_threshold
            value: 15 
        - delay: 500ms            
        - number.set:
            id: g8_move_threshold
            value: 15 
        - delay: 500ms            
        - number.set:
            id: g0_still_threshold
            value: 0 
        - delay: 500ms            
        - number.set:
            id: g1_still_threshold
            value: 0 
        - delay: 500ms            
        - number.set:
            id: g2_still_threshold
            value: 40 
        - delay: 500ms            
        - number.set:
            id: g3_still_threshold
            value: 40 
        - delay: 500ms            
        - number.set:
            id: g4_still_threshold
            value: 30 
        - delay: 500ms            
        - number.set:
            id: g5_still_threshold
            value: 30 
        - delay: 500ms            
        - number.set:
            id: g6_still_threshold
            value: 20 
        - delay: 500ms            
        - number.set:
            id: g7_still_threshold
            value: 20 
        - delay: 500ms            
        - number.set:
            id: g8_still_threshold
            value: 20 
        - delay: 500ms  

  - platform: template
    name: "Threshold Presets 3 預設"
    id: move_presets_3   
    icon: "mdi:signal-cellular-3"   
    entity_category: config
    internal: true
    on_press:
      then:
        - number.set:
            id: g0_move_threshold
            value: 45 
        - delay: 500ms            
        - number.set:
            id: g1_move_threshold
            value: 45 
        - delay: 500ms            
        - number.set:
            id: g2_move_threshold
            value: 36 
        - delay: 500ms            
        - number.set:
            id: g3_move_threshold
            value: 27 
        - delay: 500ms            
        - number.set:
            id: g4_move_threshold
            value: 18 
        - delay: 500ms            
        - number.set:
            id: g5_move_threshold
            value: 13 
        - delay: 500ms            
        - number.set:
            id: g6_move_threshold
            value: 13 
        - delay: 500ms            
        - number.set:
            id: g7_move_threshold
            value: 13 
        - delay: 500ms            
        - number.set:
            id: g8_move_threshold
            value: 13 
        - delay: 500ms            
        - number.set:
            id: g0_still_threshold
            value: 0 
        - delay: 500ms            
        - number.set:
            id: g1_still_threshold
            value: 0 
        - delay: 500ms            
        - number.set:
            id: g2_still_threshold
            value: 36 
        - delay: 500ms            
        - number.set:
            id: g3_still_threshold
            value: 36 
        - delay: 500ms            
        - number.set:
            id: g4_still_threshold
            value: 27 
        - delay: 500ms            
        - number.set:
            id: g5_still_threshold
            value: 27 
        - delay: 500ms            
        - number.set:
            id: g6_still_threshold
            value: 18 
        - delay: 500ms            
        - number.set:
            id: g7_still_threshold
            value: 18 
        - delay: 500ms            
        - number.set:
            id: g8_still_threshold
            value: 18   
        - delay: 500ms   
interval:
  - interval: 1s
    then:
      if:
        condition:
          lambda: 'return id(countNo) > 0;'
        then:
          - lambda: |-
              id(countNo) -= 1;  

text_sensor:
  - platform: ld2410
    version:
      name: "Firmware version 韌體版本"
      #internal: true
    mac_address:
      name: "Mac address 存取控制位址" 
      #internal: true

  - platform: wifi_info
    ip_address:
      name: "IP"      
      icon: "mdi:ip-outline"
    ssid:
      name: "SSID"
      icon: "mdi:router-wireless"
    mac_address:
      name: "MAC"
      icon: "mdi:lan"
select:
  - platform: ld2410
    distance_resolution:
      name: "Distance resolution 距離分辨率"
    baud_rate:
      name: "Baud rate"
      #internal: true
    light_function:
      name: "Light function 光照模式"
    out_pin_level:
      name: out pin level        
      #internal: true



script:
  - id: SetmoveGate
    then:
      lambda: |- 
         id(g0_move_threshold).publish_state(id(MaxMoveEN0_sensor).state);
         id(g1_move_threshold).publish_state(id(MaxMoveEN1_sensor).state);
         id(g2_move_threshold).publish_state(id(MaxMoveEN2_sensor).state);
         id(g3_move_threshold).publish_state(id(MaxMoveEN3_sensor).state);
         id(g4_move_threshold).publish_state(id(MaxMoveEN4_sensor).state);
         id(g5_move_threshold).publish_state(id(MaxMoveEN5_sensor).state);
         id(g6_move_threshold).publish_state(id(MaxMoveEN6_sensor).state);
         id(g7_move_threshold).publish_state(id(MaxMoveEN7_sensor).state);
         id(g8_move_threshold).publish_state(id(MaxMoveEN8_sensor).state);

  - id: SetstillGate
    then:
      lambda: |-
         id(g0_still_threshold).publish_state(id(MaxOCCEN0_sensor).state);
         id(g1_still_threshold).publish_state(id(MaxOCCEN1_sensor).state);
         id(g2_still_threshold).publish_state(id(MaxOCCEN2_sensor).state);
         id(g3_still_threshold).publish_state(id(MaxOCCEN3_sensor).state);
         id(g4_still_threshold).publish_state(id(MaxOCCEN4_sensor).state);
         id(g5_still_threshold).publish_state(id(MaxOCCEN5_sensor).state);
         id(g6_still_threshold).publish_state(id(MaxOCCEN6_sensor).state);
         id(g7_still_threshold).publish_state(id(MaxOCCEN7_sensor).state);
         id(g8_still_threshold).publish_state(id(MaxOCCEN8_sensor).state);


    

























# substitutions:
#   name: "auto-space-entrance-331a70"
#   friendly_name: Auto Space Entrance 331a70
#   upper_devicename: "ESP32-S3 LD2410C 1WAY RELAY"
#   project_name: "Taiwan Smart Home Technology.Auto Space Lite"
#   project_version: "1.0"  
#   temperature_offset: "0"
#   humidity_offset: "0"  
#   hidden_ssid: "false"    
#   illuminance_update_interval: "60s"
#   temperature_update_interval: "60s"
#   wifi_signal_update_interval: "600s"    

# esphome:
#   name: ${name}
#   friendly_name: ${friendly_name}
#   # name_add_mac_suffix: True
#   platformio_options:
#     board_build.flash_mode: dio
#   project:
#     name: "${project_name}"
#     version: "${project_version}"
#   comment: ${upper_devicename}   

# esp32:
#   board: esp32-s3-devkitc-1
#   framework:
#     type: arduino

# # Enable logging
# logger:

# # Enable Home Assistant API
# api:

# # Allow Over-The-Air updates
# ota:
#   - platform: esphome

# # Allow provisioning Wi-Fi via serial
# improv_serial:

# wifi:
#   fast_connect: ${hidden_ssid}
#   # Enable fallback hotspot (captive portal) in case wifi connection fails
#   ap:
#     ssid: ${name}
#     password: ""

# # In combination with the `ap` this allows the user
# # to provision wifi credentials to the device via WiFi AP.
# captive_portal:

# dashboard_import:
#   package_import_url: github://esphome/firmware/esphome-web/esp32s3.yaml@v2
#   import_full_config: true

# # Sets up Bluetooth LE (Only on ESP32) to allow the user
# # to provision wifi credentials to the device.
# esp32_improv:
#   authorizer: none

# # To have a "next url" for improv serial
# web_server:
#   port: 80
#   version: 3


# globals:
#   - id: countNo
#     type: int
#     initial_value: '0'
#   - id: Tuning
#     type: int
#     initial_value: '0'
#   - id: MaxMoveEN0                                                          # to keep maximum moving energy of gate 0 for tuning
#     type: int
#     initial_value: '0'
#     restore_value: true
#   - id: MaxMoveEN1                                                          # to keep maximum moving energy of gate 1 for tuning
#     type: int
#     restore_value: true
#     initial_value: '35'
#   - id: MaxMoveEN2                                                          # to keep maximum moving energy of gate 2 for tuning
#     type: int
#     restore_value: true
#     initial_value: '35'
#   - id: MaxMoveEN3                                                          # to keep maximum moving energy of gate 3 for tuning
#     type: int
#     initial_value: '35'
#     restore_value: true
#   - id: MaxMoveEN4                                                          # to keep maximum moving energy of gate 4 for tuning
#     type: int
#     initial_value: '25'
#     restore_value: true
#   - id: MaxMoveEN5                                                          # to keep maximum moving energy of gate 5 for tuning
#     type: int
#     initial_value: '25'
#     restore_value: true
#   - id: MaxMoveEN6                                                          # to keep maximum moving energy of gate 6 for tuning
#     type: int
#     initial_value: '25'
#     restore_value: true
#   - id: MaxMoveEN7                                                          # to keep maximum moving energy of gate 7 for tuning
#     type: int
#     initial_value: '25'
#     restore_value: true
#   - id: MaxMoveEN8                                                          # to keep maximum moving energy of gate 8 for tuning
#     type: int
#     initial_value: '25'
#     restore_value: true
#   - id: MaxOCCEN0                                                           # to keep maximum still energy of gate 0 for tuning
#     type: int
#     initial_value: '0'
#     restore_value: true
#   - id: MaxOCCEN1                                                           # to keep maximum still energy of gate 1 for tuning
#     type: int
#     initial_value: '100'
#     restore_value: true
#   - id: MaxOCCEN2                                                           # to keep maximum still energy of gate 2 for tuning
#     type: int
#     initial_value: '15'
#     restore_value: true
#   - id: MaxOCCEN3                                                           # to keep maximum still energy of gate 3 for tuning
#     type: int
#     initial_value: '15'
#     restore_value: true
#   - id: MaxOCCEN4                                                           # to keep maximum still energy of gate 4 for tuning
#     type: int
#     initial_value: '15'
#     restore_value: true
#   - id: MaxOCCEN5                                                           # to keep maximum still energy of gate 5 for tuning
#     type: int
#     initial_value: '15'
#     restore_value: true
#   - id: MaxOCCEN6                                                           # to keep maximum still energy of gate 6 for tuning
#     type: int
#     initial_value: '15'
#     restore_value: true
#   - id: MaxOCCEN7                                                           # to keep maximum still energy of gate 7 for tuning
#     type: int
#     initial_value: '15'
#     restore_value: true
#   - id: MaxOCCEN8                                                           # to keep maximum still energy of gate 8 for tuning
#     type: int
#     initial_value: '15'
#     restore_value: true

# uart:
#   id: uart_mmwave
#   tx_pin: 17
#   rx_pin: 18
#   baud_rate: 256000
#   parity: NONE
#   stop_bits: 1

# ld2410:     
#   uart_id: uart_mmwave
#   throttle: 1500ms
#   id: ld2410_comp

# binary_sensor:
#   - platform: ld2410
#     has_target:
#       name: "Occupancy 佔用"
#     has_moving_target:
#       name: "Moving Target 動態目標"
#     has_still_target:
#       name: "Still Target 靜態目標"
#     out_pin_presence_status:
#       name: presence status 光照判斷
#       icon: mdi:theme-light-dark

#   - platform: gpio
#     pin: GPIO16
#     icon: mdi:theme-light-dark
#     name: "Light Occupancy 光照判斷"
#     id: gpio_out_pin_presence
#     device_class: presence
#     on_state:
#       then:
#         - if:
#             condition:  # 有人，非手動，亮度不夠 開燈
#               lambda: 'return id(gpio_out_pin_presence).state && !id(decouple_1).state ;'       
#             then:        
#               - switch.turn_on: relay_1
#         - if:
#             condition:  # 有人，非手動，亮度不夠 開燈
#               lambda: 'return !id(gpio_out_pin_presence).state && !id(decouple_1).state ;'         
#             then:        
#               - switch.turn_off: relay_1    

#   - platform: gpio
#     id: binary_sensor_1
#     name: "Binary_sensor_1 開關訊號"
#     icon: mdi:toggle-switch-variant-off
#     pin:
#       number: 9
#       inverted: true
#       mode: INPUT_PULLUP
#     filters:
#       - delayed_on: 40ms
#       - delayed_off: 40ms      
#     on_state:
#       then:
#         - if:
#             condition:    
#               lambda: 'return !id(decouple_1).state;'
#             then:
#               - delay: 40ms
#               - switch.toggle: relay_1

#   - platform: template
#     name: "Busy status"
#     id: busyStatus

# switch:
#   - platform: ld2410
#     engineering_mode:
#       name: "Engineering mode 工程模式"
#     bluetooth:
#       name: "Control bluetooth 藍芽控制"
#       #internal: true
#   - platform: gpio  #light
#     id: relay_1
#     icon: mdi:electric-switch
#     pin: 8
#     name: "Relay_1 繼電器" 

#   - platform: template
#     name: "Decouple_relay_1 解藕"
#     id: decouple_1
#     icon: mdi:link-variant
#     optimistic: true
#     entity_category: config
#     restore_mode: RESTORE_DEFAULT_OFF
#     # on_turn_on:
#     #   then:
#     #   - switch.turn_on: decouple_1
#     # on_turn_off:
#     #   then:
#     #   - switch.turn_off: decouple_1    
       
# sensor:
#   - platform: ld2410
#     light:
#       name: "Light 光照度"
#     moving_distance:
#       name : "Moving Distance 動態距離"
#     still_distance:
#       name: "Still Distance 靜態距離"
#     moving_energy:
#       name: "Move Energy 動態量能"
#     still_energy:
#       name: "Still Energy 靜態量能"
#     detection_distance:
#       name: "Detection Distance 檢測距離"

#     g0:
#       move_energy:
#         name: g0 move energy
#         id: g0_Move_EN
#         on_value: 
#           lambda: |-
#             if (id(Tuning) == 1) {
#               if (id(g0_Move_EN).state > id(MaxMoveEN0)) {                            
#                 id(MaxMoveEN0) = id(g0_Move_EN).state; 
#               }
#             }
#       still_energy:
#         name: g0 still energy
#         id: g0_Still_EN
#         on_value: 
#           lambda: |-
#             if (id(Tuning) == 1) {
#               if (id(g0_Still_EN).state > id(MaxOCCEN0)) {                            
#                 id(MaxOCCEN0) = id(g0_Still_EN).state; 
#               }
#             }
#     g1:
#       move_energy:
#         name: g1 move energy
#         id: g1_Move_EN
#         on_value: 
#           lambda: |-
#             if (id(Tuning) == 1) {
#               if (id(g1_Move_EN).state > id(MaxMoveEN1)) {                            
#                 id(MaxMoveEN1) = id(g1_Move_EN).state; 
#               }
#             }
#       still_energy:
#         name: g1 still energy
#         id: g1_Still_EN
#         on_value: 
#           lambda: |-
#             if (id(Tuning) == 1) {
#               if (id(g1_Still_EN).state > id(MaxOCCEN1)) {                            
#                 id(MaxOCCEN1) = id(g1_Still_EN).state; 
#               }
#             }
#     g2:
#       move_energy:
#         name: g2 move Energy
#         id: g2_Move_EN
#         on_value: 
#           lambda: |-
#             if (id(Tuning) == 1) {
#               if (id(g2_Move_EN).state > id(MaxMoveEN2)) {                            
#                 id(MaxMoveEN2) = id(g2_Move_EN).state; 
#               }
#             }
#       still_energy:
#         name: g2 still energy
#         id: g2_Still_EN
#         on_value: 
#           lambda: |-
#             if (id(Tuning) == 1) {
#               if (id(g2_Still_EN).state > id(MaxOCCEN2)) {                            
#                 id(MaxOCCEN2) = id(g2_Still_EN).state; 
#               }
#             }
#     g3:
#       move_energy:
#         name: g3 move energy
#         id: g3_Move_EN
#         on_value: 
#           lambda: |-
#             if (id(Tuning) == 1) {
#               if (id(g3_Move_EN).state > id(MaxMoveEN3)) {                            
#                 id(MaxMoveEN3) = id(g3_Move_EN).state; 
#               }
#             }
#       still_energy:
#         name: g3 still energy
#         id: g3_Still_EN
#         on_value: 
#           lambda: |-
#             if (id(Tuning) == 1) {
#               if (id(g3_Still_EN).state > id(MaxOCCEN3)) {                            
#                 id(MaxOCCEN3) = id(g3_Still_EN).state; 
#               }
#             }
#     g4:
#       move_energy:
#         name: g4 move energy
#         id: g4_Move_EN
#         on_value: 
#           lambda: |-
#             if (id(Tuning) == 1) {
#               if (id(g4_Move_EN).state > id(MaxMoveEN4)) {                            
#                 id(MaxMoveEN4) = id(g4_Move_EN).state; 
#               }
#             }
#       still_energy:
#         name: g4 still energy
#         id: g4_Still_EN
#         on_value: 
#           lambda: |-
#             if (id(Tuning) == 1) {
#               if (id(g4_Still_EN).state > id(MaxOCCEN4)) {                            
#                 id(MaxOCCEN4) = id(g4_Still_EN).state; 
#               }
#             }

#     g5:
#       move_energy:
#         name: g5 move energy
#         id: g5_Move_EN
#         on_value: 
#           lambda: |-
#             if (id(Tuning) == 1) {
#               if (id(g5_Move_EN).state > id(MaxMoveEN5)) {                            
#                 id(MaxMoveEN5) = id(g5_Move_EN).state; 
#               }
#             }
#       still_energy:
#         name: g5 still energy
#         id: g5_Still_EN
#         on_value: 
#           lambda: |-
#             if (id(Tuning) == 1) {
#               if (id(g5_Still_EN).state > id(MaxOCCEN5)) {                            
#                 id(MaxOCCEN5) = id(g5_Still_EN).state; 
#               }
#             }
#     g6:
#       move_energy:
#         name: g6 move energy
#         id: g6_Move_EN
#         on_value: 
#           lambda: |-
#             if (id(Tuning) == 1) {
#               if (id(g6_Move_EN).state > id(MaxMoveEN6)) {                            
#                 id(MaxMoveEN6) = id(g6_Move_EN).state; 
#               }
#             }
#       still_energy:
#         name: g6 still energy
#         id: g6_Still_EN
#         on_value: 
#           lambda: |-
#             if (id(Tuning) == 1) {
#               if (id(g6_Still_EN).state > id(MaxOCCEN6)) {                            
#                 id(MaxOCCEN6) = id(g6_Still_EN).state; 
#               }
#             }
#     g7:
#       move_energy:
#         name: g7 move energy
#         id: g7_Move_EN
#         on_value: 
#           lambda: |-
#             if (id(Tuning) == 1) {
#               if (id(g7_Move_EN).state > id(MaxMoveEN7)) {                            
#                 id(MaxMoveEN7) = id(g7_Move_EN).state; 
#               }
#             }
#       still_energy:
#         name: g7 still energy
#         id: g7_Still_EN
#         on_value: 
#           lambda: |-
#             if (id(Tuning) == 1) {
#               if (id(g7_Still_EN).state > id(MaxOCCEN7)) {                            
#                 id(MaxOCCEN7) = id(g7_Still_EN).state; 
#               }
#             }
#     g8:
#       move_energy:
#         name: g8 move energy
#         id: g8_Move_EN
#         on_value: 
#           lambda: |-
#             if (id(Tuning) == 1) {
#               if (id(g8_Move_EN).state > id(MaxMoveEN8)) {                            
#                 id(MaxMoveEN8) = id(g8_Move_EN).state; 
#               }
#             }
#       still_energy:
#         name: g8 still energy
#         id: g8_Still_EN
#         on_value: 
#           lambda: |-
#             if (id(Tuning) == 1) {
#               if (id(g8_Still_EN).state > id(MaxOCCEN8)) {                            
#                 id(MaxOCCEN8) = id(g8_Still_EN).state; 
#               }
#             }

#   - platform: template
#     name: countDown
#     id: countDown
#     update_interval: 0.1s
#     accuracy_decimals: 0
#     lambda: |-
#         return id(countNo);


#   - platform: template
#     name: g0 move threshold
#     id: MaxMoveEN0_sensor  
#     update_interval: 0.1s
#     lambda: |-
#       if (id(Tuning) == 1 || id(Tuning) == 2) {
#         return id(MaxMoveEN0) + id(weight).state;
#       } else {
#         return id(MaxMoveEN0_sensor).state;
#       }   
#   - platform: template
#     name: g1 move threshold
#     id: MaxMoveEN1_sensor  
#     update_interval: 0.1s
#     lambda: |-
#       if (id(Tuning) == 1 || id(Tuning) == 2) {
#         return id(MaxMoveEN1) + id(weight).state;
#       } else {
#         return id(MaxMoveEN1_sensor).state;
#       }  
#   - platform: template
#     name: g2 move threshold
#     id: MaxMoveEN2_sensor  
#     update_interval: 0.1s
#     lambda: |-
#       if (id(Tuning) == 1 || id(Tuning) == 2) {
#         return id(MaxMoveEN2) + id(weight).state;
#       } else {
#         return id(MaxMoveEN2_sensor).state;
#       }   
#   - platform: template
#     name: g3 move threshold
#     id: MaxMoveEN3_sensor  
#     update_interval: 0.1s
#     lambda: |-
#       if (id(Tuning) == 1 || id(Tuning) == 2) {
#         return id(MaxMoveEN3) + id(weight).state;
#       } else {
#         return id(MaxMoveEN3_sensor).state;
#       }   
#   - platform: template
#     name: g4 move threshold
#     id: MaxMoveEN4_sensor  
#     update_interval: 0.1s
#     lambda: |-
#       if (id(Tuning) == 1 || id(Tuning) == 2) {
#         return id(MaxMoveEN4) + id(weight).state;
#       } else {
#         return id(MaxMoveEN4_sensor).state;
#       }   
#   - platform: template
#     name: g5 move threshold
#     id: MaxMoveEN5_sensor  
#     update_interval: 0.1s
#     lambda: |-
#       if (id(Tuning) == 1 || id(Tuning) == 2) {
#         return id(MaxMoveEN5) + id(weight).state;
#       } else {
#         return id(MaxMoveEN5_sensor).state;
#       }    
#   - platform: template
#     name: g6 move threshold
#     id: MaxMoveEN6_sensor  
#     update_interval: 0.1s
#     lambda: |-
#       if (id(Tuning) == 1 || id(Tuning) == 2) {
#         return id(MaxMoveEN6) + id(weight).state;
#       } else {
#         return id(MaxMoveEN6_sensor).state;
#       }    
#   - platform: template
#     name: g7 move threshold
#     id: MaxMoveEN7_sensor  
#     update_interval: 0.1s
#     lambda: |-
#       if (id(Tuning) == 1 || id(Tuning) == 2) {
#         return id(MaxMoveEN7) + id(weight).state;
#       } else {
#         return id(MaxMoveEN7_sensor).state;
#       }    
#   - platform: template
#     name: g8 move threshold
#     id: MaxMoveEN8_sensor  
#     update_interval: 0.1s
#     lambda: |-
#       if (id(Tuning) == 1 || id(Tuning) == 2) {
#         return id(MaxMoveEN8) + id(weight).state;
#       } else {
#         return id(MaxMoveEN8_sensor).state;
#       }    
#   - platform: template
#     name: g0 still threshold
#     id: MaxOCCEN0_sensor  
#     update_interval: 0.1s
#     lambda: |-
#       if (id(Tuning) == 1 || id(Tuning) == 2) {
#         return id(MaxOCCEN0) + id(weight).state;
#       } else {
#         return id(MaxOCCEN0_sensor).state;
#       }    
#   - platform: template
#     name: g1 still threshold
#     id: MaxOCCEN1_sensor  
#     update_interval: 0.1s
#     lambda: |-
#       if (id(Tuning) == 1 || id(Tuning) == 2) {
#         return id(MaxOCCEN1) + id(weight).state;
#       } else {
#         return id(MaxOCCEN1_sensor).state;
#       }    
#   - platform: template
#     name: g2 still threshold
#     id: MaxOCCEN2_sensor  
#     update_interval: 0.1s
#     lambda: |-
#       if (id(Tuning) == 1 || id(Tuning) == 2) {
#         return id(MaxOCCEN2) + id(weight).state;
#       } else {
#         return id(MaxOCCEN2_sensor).state;
#       }    
#   - platform: template
#     name: g3 still threshold
#     id: MaxOCCEN3_sensor  
#     update_interval: 0.1s
#     lambda: |-
#       if (id(Tuning) == 1 || id(Tuning) == 2) {
#         return id(MaxOCCEN3) + id(weight).state;
#       } else {
#         return id(MaxOCCEN3_sensor).state;
#       }    
#   - platform: template
#     name: g4 still threshold
#     id: MaxOCCEN4_sensor  
#     update_interval: 0.1s
#     lambda: |-
#       if (id(Tuning) == 1 || id(Tuning) == 2) {
#         return id(MaxOCCEN4) + id(weight).state;
#       } else {
#         return id(MaxOCCEN4_sensor).state;
#       }    
#   - platform: template
#     name: g5 still threshold
#     id: MaxOCCEN5_sensor  
#     update_interval: 0.1s
#     lambda: |-
#       if (id(Tuning) == 1 || id(Tuning) == 2) {
#         return id(MaxOCCEN5) + id(weight).state;
#       } else {
#         return id(MaxOCCEN5_sensor).state;
#       }    
#   - platform: template
#     name: g6 still threshold
#     id: MaxOCCEN6_sensor  
#     update_interval: 0.1s
#     lambda: |-
#       if (id(Tuning) == 1 || id(Tuning) == 2) {
#         return id(MaxOCCEN6) + id(weight).state;
#       } else {
#         return id(MaxOCCEN6_sensor).state;
#       }    
#   - platform: template
#     name: g7 still threshold
#     id: MaxOCCEN7_sensor  
#     update_interval: 0.1s
#     lambda: |-
#       if (id(Tuning) == 1 || id(Tuning) == 2) {
#         return id(MaxOCCEN7) + id(weight).state;
#       } else {
#         return id(MaxOCCEN7_sensor).state;
#       }    
#   - platform: template
#     name: g8 still threshold
#     id: MaxOCCEN8_sensor  
#     update_interval: 0.1s
#     lambda: |-
#       if (id(Tuning) == 1 || id(Tuning) == 2) {
#         return id(MaxOCCEN8) + id(weight).state;
#       } else {
#         return id(MaxOCCEN8_sensor).state;
#       } 
#     # g0:
#     #   move_energy:
#     #     name: "g0 move energy 動態量能"
#     #     #internal: true
#     #   still_energy:
#     #     name: "g0 still energy 靜態量能"
#     #     #internal: true
#     # g1:
#     #   move_energy:
#     #     name: "g1 move energy 動態量能"
#     #     #internal: true
#     #   still_energy:
#     #     name: "g1 still energy 靜態量能"
#     #     #internal: true
#     # g2:
#     #   move_energy:
#     #     name: "g2 move energy 動態量能"
#     #     #internal: true
#     #   still_energy:
#     #     name: "g2 still energy 靜態量能"
#     #     #internal: true
#     # g3:
#     #   move_energy:
#     #     name: "g3 move energy 動態量能"
#     #     #internal: true
#     #   still_energy:
#     #     name: "g3 still energy 靜態量能"
#     #     #internal: true
#     # g4:
#     #   move_energy:
#     #     name: "g4 move energy 動態量能"
#     #     #internal: true
#     #   still_energy:
#     #     name: "g4 still energy 靜態量能"
#     #     #internal: true
#     # g5:
#     #   move_energy:
#     #     name: "g5 move energy 動態量能"
#     #     #internal: true
#     #   still_energy:
#     #     name: "g5 still energy 靜態量能"
#     #     #internal: true
#     # g6:
#     #   move_energy:
#     #     name: "g6 move energy 動態量能"
#     #     #internal: true
#     #   still_energy:
#     #     name: "g6 still energy 靜態量能"
#     #     #internal: true
#     # g7:
#     #   move_energy:
#     #     name: "g7 move energy 動態量能"
#     #     #internal: true
#     #   still_energy:
#     #     name: "g7 still energy 靜態量能"
#     #     #internal: true
#     # g8:
#     #   move_energy:
#     #     name: "g8 move energy 動態量能"
#     #     #internal: true
#     #   still_energy:
#     #     name: "g8 still energy 靜態量能"   
#     #     #internal: true
# number:
#   - platform: ld2410
#     timeout:
#       name: timeout
#     max_move_distance_gate:
#       name: max move distance gate
#     max_still_distance_gate:
#       name: max still distance gate
#     g0:
#       move_threshold:
#         name: g0 move threshold
#         id: g0_move_threshold
#       still_threshold:
#         name: g0 still threshold
#         id: g0_still_threshold
#     g1:
#       move_threshold:
#         name: g1 move threshold
#         id: g1_move_threshold
#       still_threshold:
#         name: g1 still threshold
#         id: g1_still_threshold
#     g2:
#       move_threshold:
#         name: g2 move threshold
#         id: g2_move_threshold
#       still_threshold:
#         name: g2 still threshold
#         id: g2_still_threshold
#     g3:
#       move_threshold:
#         name: g3 move threshold
#         id: g3_move_threshold
#       still_threshold:
#         name: g3 still threshold
#         id: g3_still_threshold
#     g4:
#       move_threshold:
#         name: g4 move threshold
#         id: g4_move_threshold
#       still_threshold:
#         name: g4 still threshold
#         id: g4_still_threshold
#     g5:
#       move_threshold:
#         name: g5 move threshold
#         id: g5_move_threshold
#       still_threshold:
#         name: g5 still threshold
#         id: g5_still_threshold
#     g6:
#       move_threshold:
#         name: g6 move threshold
#         id: g6_move_threshold
#       still_threshold:
#         name: g6 still threshold
#         id: g6_still_threshold
#     g7:
#       move_threshold:
#         name: g7 move threshold
#         id: g7_move_threshold
#       still_threshold:
#         name: g7 still threshold
#         id: g7_still_threshold
#     g8:
#       move_threshold:
#         name: g8 move threshold
#         id: g8_move_threshold
#       still_threshold:
#         name: g8 still threshold
#         id: g8_still_threshold 

#   - platform: template
#     name: weight                                                             # maximum gate count
#     id: weight
#     min_value: 3
#     max_value: 24
#     initial_value: 3
#     step: 3
#     restore_value: true
#     optimistic: true

# # number:
# #   - platform: ld2410
# #     timeout:
# #       name: "Timeout 延遲時間"
# #       mode: box
# #     light_threshold:
# #       name: "Light threshold 光照度臨界值"
# #     max_move_distance_gate:
# #       name: "Max move distance gate 動態檢測倍數"
# #     max_still_distance_gate:
# #       name: "Max still distance gate 靜態檢測倍數"
# #     g0:
# #       move_threshold:
# #         name: "g0 move threshold 動態臨界值"
# #         #internal: true
# #         id: g0_move_threshold
# #       still_threshold:
# #         name: "g0 still threshold 靜態臨界值"
# #         #internal: true
# #         id: g0_still_threshold
# #     g1:
# #       move_threshold:
# #         name: "g1 move threshold 動態臨界值"
# #         #internal: true
# #         id: g1_move_threshold
# #       still_threshold:
# #         name: "g1 still threshold 靜態臨界值"
# #         #internal: true
# #         id: g1_still_threshold
# #     g2:
# #       move_threshold:
# #         name: "g2 move threshold 動態臨界值"
# #         #internal: true
# #         id: g2_move_threshold
# #       still_threshold:
# #         name: "g2 still threshold 靜態臨界值"
# #         #internal: true
# #         id: g2_still_threshold
# #     g3:
# #       move_threshold:
# #         name: "g3 move threshold 動態臨界值"
# #         #internal: true
# #         id: g3_move_threshold
# #       still_threshold:
# #         name: "g3 still threshold 靜態臨界值"
# #         #internal: true
# #         id: g3_still_threshold
# #     g4:
# #       move_threshold:
# #         name: "g4 move threshold 動態臨界值"
# #         #internal: true
# #         id: g4_move_threshold
# #       still_threshold:
# #         name: "g4 still threshold 靜態臨界值"
# #         #internal: true
# #         id: g4_still_threshold
# #     g5:
# #       move_threshold:
# #         name: "g5 move threshold 動態臨界值"
# #         #internal: true
# #         id: g5_move_threshold
# #       still_threshold:
# #         name: "g5 still threshold 靜態臨界值"
# #         #internal: true
# #         id: g5_still_threshold
# #     g6:
# #       move_threshold:
# #         name: "g6 move threshold 動態臨界值"
# #         #internal: true
# #         id: g6_move_threshold
# #       still_threshold:
# #         name: "g6 still threshold 靜態臨界值"
# #         #internal: true
# #         id: g6_still_threshold
# #     g7:
# #       move_threshold:
# #         name: "g7 move threshold 動態臨界值"
# #         #internal: true
# #         id: g7_move_threshold
# #       still_threshold:
# #         name: "g7 still threshold 靜態臨界值"
# #         #internal: true
# #         id: g7_still_threshold
# #     g8:
# #       move_threshold:
# #         name: "g8 move threshold 動態臨界值"
# #         #internal: true
# #         id: g8_move_threshold
# #       still_threshold:
# #         name: "g8 still threshold 靜態臨界值"
# #         #internal: true
# #         id: g8_still_threshold  
        
# interval:
#   - interval: 1s
#     then:
#       if:
#         condition:
#           lambda: 'return id(countNo) > 0;'
#         then:
#           - lambda: |-
#               id(countNo) -= 1; 
# button:
#   - platform: ld2410
#     factory_reset:
#       name: "Factory reset 恢復出廠設定"
#       #internal: true
#     restart:
#       name: "Restart 重開機"
#     query_params:
#       name: "Query params 查詢參數"   
#       #internal: true

#   - platform: template
#     name: tunigSetting
#     id: tuning_setiing
#     on_press:
#       - lambda: id(busyStatus).publish_state(true);
#       - lambda: |-
#           id(MaxMoveEN0) = 0;
#           id(MaxMoveEN1) = 0;
#           id(MaxMoveEN2) = 0;
#           id(MaxMoveEN3) = 0;
#           id(MaxMoveEN4) = 0;
#           id(MaxMoveEN5) = 0;
#           id(MaxMoveEN6) = 0;
#           id(MaxMoveEN7) = 0;
#           id(MaxMoveEN8) = 0;
#           id(MaxOCCEN0) = 0;
#           id(MaxOCCEN1) = 0;
#           id(MaxOCCEN2) = 0;
#           id(MaxOCCEN3) = 0;
#           id(MaxOCCEN4) = 0;
#           id(MaxOCCEN5) = 0;
#           id(MaxOCCEN6) = 0;
#           id(MaxOCCEN7) = 0;
#           id(MaxOCCEN8) = 0;
#       - lambda: id(Tuning) = 1;
#       - lambda: id(countNo) = 120;
#       - delay: 114s
#       - lambda: id(Tuning) = 0;
#       - lambda: id(SetmoveGate).execute();                                          // set moving threshold to LD2410
#       - delay: 3s
#       - lambda: id(SetstillGate).execute();                                         // set still threshold to LD2410                   
#       - delay: 3s
#       - lambda: id(busyStatus).publish_state(false);


#   # - platform: template
#   #   name: "Threshold Presets 1 預設"
#   #   id: move_presets_1   
#   #   icon: "mdi:signal-cellular-1"   
#   #   entity_category: config
#   #   on_press:
#   #     then:
#   #       - number.set:
#   #           id: g0_move_threshold
#   #           value: 60 
#   #       - delay: 500ms
#   #       - number.set:
#   #           id: g1_move_threshold
#   #           value: 60 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g2_move_threshold
#   #           value: 48 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g3_move_threshold
#   #           value: 36 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g4_move_threshold
#   #           value: 24 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g5_move_threshold
#   #           value: 18 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g6_move_threshold
#   #           value: 18 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g7_move_threshold
#   #           value: 18 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g8_move_threshold
#   #           value: 18     
#   #       - delay: 500ms                                                                                            
#   #       - number.set:
#   #           id: g0_still_threshold
#   #           value: 0 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g1_still_threshold
#   #           value: 0 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g2_still_threshold
#   #           value: 48 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g3_still_threshold
#   #           value: 48 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g4_still_threshold
#   #           value: 36 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g5_still_threshold
#   #           value: 36 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g6_still_threshold
#   #           value: 24 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g7_still_threshold
#   #           value: 24 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g8_still_threshold
#   #           value: 24 
#   #       - delay: 500ms  

#   # - platform: template
#   #   name: "Threshold Presets 2 預設"
#   #   id: move_presets_2   
#   #   icon: "mdi:signal-cellular-2"   
#   #   entity_category: config
#   #   on_press:
#   #     then:
#   #       - number.set:
#   #           id: g0_move_threshold
#   #           value: 50 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g1_move_threshold
#   #           value: 50 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g2_move_threshold
#   #           value: 40 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g3_move_threshold
#   #           value: 30 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g4_move_threshold
#   #           value: 20 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g5_move_threshold
#   #           value: 15 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g6_move_threshold
#   #           value: 15 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g7_move_threshold
#   #           value: 15 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g8_move_threshold
#   #           value: 15 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g0_still_threshold
#   #           value: 0 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g1_still_threshold
#   #           value: 0 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g2_still_threshold
#   #           value: 40 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g3_still_threshold
#   #           value: 40 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g4_still_threshold
#   #           value: 30 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g5_still_threshold
#   #           value: 30 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g6_still_threshold
#   #           value: 20 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g7_still_threshold
#   #           value: 20 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g8_still_threshold
#   #           value: 20 
#   #       - delay: 500ms  

#   # - platform: template
#   #   name: "Threshold Presets 3 預設"
#   #   id: move_presets_3   
#   #   icon: "mdi:signal-cellular-3"   
#   #   entity_category: config
#   #   on_press:
#   #     then:
#   #       - number.set:
#   #           id: g0_move_threshold
#   #           value: 45 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g1_move_threshold
#   #           value: 45 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g2_move_threshold
#   #           value: 36 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g3_move_threshold
#   #           value: 27 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g4_move_threshold
#   #           value: 18 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g5_move_threshold
#   #           value: 13 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g6_move_threshold
#   #           value: 13 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g7_move_threshold
#   #           value: 13 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g8_move_threshold
#   #           value: 13 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g0_still_threshold
#   #           value: 0 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g1_still_threshold
#   #           value: 0 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g2_still_threshold
#   #           value: 36 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g3_still_threshold
#   #           value: 36 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g4_still_threshold
#   #           value: 27 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g5_still_threshold
#   #           value: 27 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g6_still_threshold
#   #           value: 18 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g7_still_threshold
#   #           value: 18 
#   #       - delay: 500ms            
#   #       - number.set:
#   #           id: g8_still_threshold
#   #           value: 18   
#   #       - delay: 500ms 
    
# script:
#   - id: SetmoveGate
#     then:
#       lambda: |- 
#          id(g0_move_threshold).publish_state(id(MaxMoveEN0_sensor).state);
#          id(g1_move_threshold).publish_state(id(MaxMoveEN1_sensor).state);
#          id(g2_move_threshold).publish_state(id(MaxMoveEN2_sensor).state);
#          id(g3_move_threshold).publish_state(id(MaxMoveEN3_sensor).state);
#          id(g4_move_threshold).publish_state(id(MaxMoveEN4_sensor).state);
#          id(g5_move_threshold).publish_state(id(MaxMoveEN5_sensor).state);
#          id(g6_move_threshold).publish_state(id(MaxMoveEN6_sensor).state);
#          id(g7_move_threshold).publish_state(id(MaxMoveEN7_sensor).state);
#          id(g8_move_threshold).publish_state(id(MaxMoveEN8_sensor).state);

#   - id: SetstillGate
#     then:
#       lambda: |-
#          id(g0_still_threshold).publish_state(id(MaxOCCEN0_sensor).state);
#          id(g1_still_threshold).publish_state(id(MaxOCCEN1_sensor).state);
#          id(g2_still_threshold).publish_state(id(MaxOCCEN2_sensor).state);
#          id(g3_still_threshold).publish_state(id(MaxOCCEN3_sensor).state);
#          id(g4_still_threshold).publish_state(id(MaxOCCEN4_sensor).state);
#          id(g5_still_threshold).publish_state(id(MaxOCCEN5_sensor).state);
#          id(g6_still_threshold).publish_state(id(MaxOCCEN6_sensor).state);
#          id(g7_still_threshold).publish_state(id(MaxOCCEN7_sensor).state);
#          id(g8_still_threshold).publish_state(id(MaxOCCEN8_sensor).state);

# text_sensor:
#   - platform: ld2410
#     version:
#       name: "Firmware version 韌體版本"
#       #internal: true
#     mac_address:
#       name: "Mac address 存取控制位址" 
#       #internal: true

#   - platform: wifi_info
#     ip_address:
#       name: "IP"      
#       icon: "mdi:ip-outline"
#     ssid:
#       name: "SSID"
#       icon: "mdi:router-wireless"
#     mac_address:
#       name: "MAC"
#       icon: "mdi:lan"
# select:
#   - platform: ld2410
#     distance_resolution:
#       name: "Distance resolution 距離分辨率"
#     baud_rate:
#       name: "Baud rate"
#       #internal: true
#     light_function:
#       name: "Light function 光照模式"
#     out_pin_level:
#       name: out pin level        
#       #internal: true
